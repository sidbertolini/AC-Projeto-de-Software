@page "/cadastro"
@inject IAlunoService alunoService;
@inject NavigationManager NavigationManager


<h1>@Status</h1>
<EditForm Model=@Aluno OnSubmit=@FormSubmitted>
    <div class="form-group m-3">
        <label for="Aluno-item">Nome:</label>
        <InputText id="Aluno-item" autocomplete="off"
                   @bind-Value="@Aluno.Nome"></InputText>
    </div>
    <div class="form-group m-3">
        <label for="Aluno-item">Data de Nascimento:</label>
        <InputDate id="Aluno-date" autocomplete="off"
                   @bind-Value="@Aluno.DataDeNascimento"></InputDate>
    </div>
    <div class="form-group m-3">
        <label for="Aluno-complete">Unidade:</label>
        <InputText id="Aluno-complete" autocomplete="off"
                   @bind-Value="@Aluno.Unidade"></InputText>
    </div>
    <div class="form-group m-3">
        <label for="Aluno-important">Mensalidade paga em:</label>
        <InputDate id="Aluno-important" autocomplete="off"
                   @bind-Value="@Aluno.DataPagamento"></InputDate>
    </div>
    <input class="btn btn-primary" type="submit" value="Submit">

</EditForm>

@code
{
    string Status = "Cadastrar aluno";
    AlunoDTO Aluno = new AlunoDTO();

    async Task FormSubmitted()
    {
        Status = $"Aluno {Aluno.Nome} Cadastrado\nRedirecionando para lista de alunos";
        try
        {
            await alunoService.CadastrarAluno(Aluno);
            NavigationManager.NavigateTo("alunos");
        }
        catch (Exception ex)
        {
            Status = $"Erro no cadastro: {ex.Message}";
            throw;
        }
	}
}
